chapters:
  - chapterName: "Chapter 2: Control Flow"
    modules:
    - id: "F4A3B2C1-D0E9-4F8A-BC7D-6E5F4A3B2C1D"
      module_name: "Variable"
      multipleChoice:
      - question: "Which keyword should you use to store a user's date of birth, which will never change?"
        options:
        - "var"
        - "let"
        - "const"
        - "static"
        answer: "let"
      - question: "What is the value of `x` after this code runs?\nlet x = 10\nvar y = x\ny = 5"
        options:
        - "5"
        - "10"
        - "The code will cause an error."
        - "15"
        answer: "10"
      - question: "Which of the following is a valid constant declaration?"
        options:
        - "var name = \"Alice\""
        - "let name = \"Alice\""
        - "constant name = \"Alice\""
        - "let name: String"
        answer: "let name = \"Alice\""
      content_blocks:
      - type: "heading1"
        content:
          text: "Variable"
      - type: "heading2"
        content:
          text: "Introduction to Variables"
      - type: "explanation"
        content:
          text: "Variables are fundamental building blocks in Swift, allowing you to store and manipulate data. They act as containers for values that can change during the execution of your program. Understanding variables is crucial for writing dynamic and interactive applications."
      - type: "heading2"
        content:
          text: "Declaring Variables"
      - type: "explanation"
        content:
          text: "In Swift, you declare variables using the '**var**' keyword, followed by the variable name and an optional initial value. For example, **'var age = 25'** declares a variable named '**age**' and initializes it with the value 25."
      - type: "snippet"
        content:
          code: |
            var age = "25"
      - type: "heading2"
        content:
          text: "Variable Types"
      - type: "explanation"
        content:
          text: "Swift is a type-safe language, meaning that every variable has a specific type, such as '**Int**' for integers, '**String**' for text, or '**Bool**' for boolean values. You can explicitly specify the type of a variable using a colon, like '**var name: String = \"Sophia\"**', or let Swift infer the type from the initial value."
      - type: "heading2"
        content:
          text: "Variable Naming Conventions"
      - type: "explanation"
        content:
          text: "Choose descriptive names for your variables that reflect their purpose. Variable names should start with a lowercase letter and can contain letters, numbers, and underscores. For example, '**userName**', '**totalScore**', and '**isValid**' are valid variable names."
    - id: "C36C495A-93FC-4E6E-81F8-0C247A3E6E5F"
      module_name: "Variables and Constants"
      multipleChoice:
      - question: "What is the value of `x` after this code runs?\nlet x = 10\nvar y = x\ny = 5"
        options:
        - "5"
        - "10"
        - "The code will cause an error."
        - "15"
        answer: "10"
      - question: "Which keyword should you use to store a user's date of birth, which will never change?"
        options:
        - "var"
        - "let"
        - "const"
        - "static"
        answer: "let"
      - question: "Which of the following is a valid constant declaration?"
        options:
        - "var name = \"Alice\""
        - "let name = \"Alice\""
        - "constant name = \"Alice\""
        - "let name: String"
        answer: "let name = \"Alice\""
      content_blocks:
      - type: "explanation"
        content:
          text: "Here is an example of **bolded text**, *italicized text*, and ==highlighted text==."
      - type: "explanation"
        content:
          text: "In Swift, we use 'variables' to store values that can change, and 'constants' for values that, once set, will never change. This is a key safety feature."
      - type: "explanation"
        content:
          text: "We declare variables with the 'var' keyword and constants with the 'let' keyword."
      - type: "explanation"
        content:
          text: "Let's try it! The best way to learn is by doing. Copy the code from the snippet below and paste it into a Swift Playground to see it in action. After you run it, try changing the value of 'score'. Then, try to change 'playerName' and see what kind of error Xcode gives you."
      - type: "snippet"
        content:
          code: |
            var score = 100
            score = 110 // This is allowed.
            let playerName = "Cyber-Cat"
            print("The final score is: \(score)")
            print("Welcome, \(playerName)!")
    - id: "A33B3282-5B3E-44C3-8D23-A7522A44C3A3"
      module_name: "Introduction to Loops"
      multipleChoice:
      - question: "How many times will the text 'Hello' be printed by this loop: for _ in 1...5 { print(\"Hello\") }?"
        options:
        - "1"
        - "4"
        - "5"
        - "6"
        answer: "5"
      content_blocks:
      - type: "explanation"
        content:
          text: "Loops allow us to repeat a piece of code multiple times. The most common type in Swift is the 'for-in' loop, which is great for running code for each item in a collection or a range of numbers."
      - type: "snippet"
        content:
          code: |
            // This loop will print numbers 1 through 3
            for i in 1...3 {
              print("The number is \(i)")
            }
    - id: "8E4FA9B0-C1D2-4C3D-B5C6-D7E81A2B4C3D"
      module_name: "Data Storage in Swift"
      multipleChoice:
      - question: "Which keyword should you use to store a user's date of birth, which will never change?"
        options:
        - "var"
        - "let"
        - "const"
        - "static"
        answer: "let"
      content_blocks:
      - type: "explanation"
        content:
          text: "Here is an example of **bolded text**, *italicized text*, and ==highlighted text==."
      - type: "explanation"
        content:
          text: "In Swift, we use 'variables' to store values that can change, and 'constants' for values that, once set, will never change. This is a key safety feature."
      - type: "explanation"
        content:
          text: "We declare variables with the 'var' keyword and constants with the 'let' keyword."
      - type: "explanation"
        content:
          text: "Let's try it! The best way to learn is by doing. Copy the code from the snippet below and paste it into a Swift Playground to see it in action. After you run it, try changing the value of 'score'. Then, try to change 'playerName' and see what kind of error Xcode gives you."
      - type: "snippet"
        content:
          code: |
            var score = 100
            score = 110 // This is allowed.
            let playerName = "Cyber-Cat"
            print("The final score is: \(score)")
            print("Welcome, \(playerName)!")
    - id: "9C2BA1B0-C9D8-4E3D-F1E2-D3C4B5A64E3D"
      module_name: "Repeating Code with Loops"
      multipleChoice:
      - question: "How many times will the text 'Hello' be printed by this loop: for _ in 1...5 { print(\"Hello\") }?"
        options:
        - "1"
        - "4"
        - "5"
        - "6"
        answer: "5"
      content_blocks:
      - type: "explanation"
        content:
          text: "Loops allow us to repeat a piece of code multiple times. The most common type in Swift is the 'for-in' loop, which is great for running code for each item in a collection or a range of numbers."
      - type: "snippet"
        content:
          code: |
            // This loop will print numbers 1 through 3
            for i in 1...3 {
              print("The number is \(i)")
            }
    - id: "EEFF4011-8222-4ABB-CCDD-334455667788"
      module_name: "Understanding `let` and `var`"
      multipleChoice:
      - question: "Which keyword should you use to store a user's date of birth, which will never change?"
        options:
        - "var"
        - "let"
        - "const"
        - "static"
        answer: "let"
      content_blocks:
      - type: "explanation"
        content:
          text: "Here is an example of **bolded text**, *italicized text*, and ==highlighted text==."
      - type: "explanation"
        content:
          text: "In Swift, we use 'variables' to store values that can change, and 'constants' for values that, once set, will never change. This is a key safety feature."
      - type: "explanation"
        content:
          text: "We declare variables with the 'var' keyword and constants with the 'let' keyword."
      - type: "explanation"
        content:
          text: "Let's try it! The best way to learn is by doing. Copy the code from the snippet below and paste it into a Swift Playground to see it in action. After you run it, try changing the value of 'score'. Then, try to change 'playerName' and see what kind of error Xcode gives you."
      - type: "snippet"
        content:
          code: |
            var score = 100
            score = 110 // This is allowed.
            let playerName = "Cyber-Cat"
            print("The final score is: \(score)")
            print("Welcome, \(playerName)!")
    finalReview:
      content_blocks:
      - type: "heading1"
        content:
          text: "Chapter 2 Review"
      - type: "explanation"
        content:
          text: "This is a placeholder for the final review of Chapter 2."
